/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/main.js":
/*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
/***/ (() => {

eval("$(document).ready(function () {\n  /* Récupération des éléments HTML */\n  var toggleCheckbox = $('#toggle_checkbox');\n  var body = $('body');\n  var formContainer = $('.form-container');\n  var form = $('form');\n  var passwordInput = $('#password');\n  var confirmPasswordInput = $('#confirm-password');\n  var passwordValidationIcon = $('#password-validation-icon');\n  var confirmPasswordValidationIcon = $('#confirm-password-validation-icon');\n  var passwordValidationIcon = $('#password-validation-icon');\n  var confirmPasswordValidationIcon = $('#confirm-password-validation-icon');\n\n  /* Désactivation temporaire des transitions */\n  body.css('transition', 'none');\n  form.css('transition', 'none');\n  formContainer.css('transition', 'none');\n\n  /* Définition des couleurs d'arrière-plan et de texte initiales */\n  body.css('backgroundColor', '#f9f4e1');\n  body.css('color', '#000');\n  form.css('backgroundColor', '#f9f4e1');\n\n  /* Récupération de l'état du mode sombre depuis le localStorage */\n  var isDarkMode = localStorage.getItem('darkMode') === 'true';\n\n  /* Application de l'état du mode sombre */\n  toggleCheckbox.prop('checked', isDarkMode);\n  applyDarkMode(isDarkMode);\n\n  /* Gestion du changement d'état du mode sombre */\n  toggleCheckbox.on('change', function () {\n    var isDark = toggleCheckbox.is(':checked');\n    body.toggleClass('dark-mode', isDark);\n\n    /* Mise à jour de l'état du mode sombre dans le localStorage */\n    localStorage.setItem('darkMode', isDark);\n\n    /* Appliquer les changements d'arrière-plan et de couleur en fonction de l'état du mode sombre */\n    applyDarkMode(isDark);\n  });\n\n  /* Réactivation des transitions après un court délai */\n  setTimeout(function () {\n    body.css('transition', '');\n    form.css('transition', '');\n    formContainer.css('transition', '');\n  }, 100);\n\n  /* Ajout d'un écouteur d'événements \"click\" au bouton d'annulation */\n  $('#cancel').on('click', function () {\n    window.location.href = '/devweb'; // Remplacez \"/devweb\" par votre URL\n  });\n\n  /* Application du mode sombre */\n  function applyDarkMode(isDark) {\n    if (isDark) {\n      /* Passage en mode sombre */\n      body.css('backgroundColor', '#333');\n      body.css('color', '#f9f4e1');\n      form.css('backgroundColor', '#333');\n      formContainer.css('backgroundImage', \"url('/images/background_dark.png')\");\n    } else {\n      /* Passage en mode clair */\n      body.css('backgroundColor', '#f9f4e1');\n      body.css('color', '#000');\n      form.css('backgroundColor', '#f9f4e1');\n      formContainer.css('backgroundImage', \"url('/images/background.png')\");\n    }\n  }\n\n  /* Récupération des éléments e-mail et de confirmation d'e-mail */\n  var emailInput = $('#email');\n  var confirmEmailInput = $('#confirm-email');\n\n  /* Interdiction du copier/coller dans le champ de confirmation d'e-mail */\n  confirmEmailInput.on('paste', function (event) {\n    event.preventDefault();\n  });\n\n  /* Empêcher le copier/coller dans le champ de confirmation du mot de passe */\n  confirmPasswordInput.on('paste', function (e) {\n    e.preventDefault();\n    alert(\"Il n'est pas possible de coller dans ce champ.\");\n  });\n\n  /* Ajout d'un écouteur d'événements \"submit\" au formulaire */\n  $('#login-form').on('submit', function (event) {\n    try {\n      /* Récupération de l'e-mail et du mot de passe des champs de saisie */\n      var email = emailInput.val();\n      var password = passwordInput.val();\n\n      /* Si l'e-mail n'est pas valide, si les e-mails ne correspondent pas ou si le mot de passe n'est pas valide, blocage de la soumission du formulaire */\n      if (!validateEmail(email)) {\n        alert('Veuillez entrer une adresse e-mail valide.');\n        event.preventDefault();\n      } else if (email !== confirmEmail) {\n        alert('Les adresses e-mail ne correspondent pas.');\n        event.preventDefault();\n      } else if (!validatePassword(password)) {\n        alert('Le mot de passe doit contenir au moins une lettre minuscule, une lettre majuscule, un chiffre, un caractère spécial et avoir une longueur minimale de 8 caractères.');\n        event.preventDefault();\n      } else if (password !== confirmPassword) {\n        alert('Les mots de passe ne correspondent pas.');\n        event.preventDefault();\n      }\n    } catch (error) {\n      /* Si une erreur se produit, capture et affichage de celle-ci */\n      console.error(\"Une erreur s'est produite lors de la validation du formulaire :\", error);\n    }\n  });\n\n  /* Fonction pour valider une adresse e-mail */\n  function validateEmail(email) {\n    /* Création d'une expression régulière pour tester le format de l'e-mail */\n    var re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    /* Test de l'e-mail avec l'expression régulière et renvoi du résultat */\n    return re.test(email);\n  }\n\n  /* Fonction pour valider un mot de passe */\n  function validatePassword(password) {\n    /* Création d'une expression régulière pour tester le format du mot de passe */\n    var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    /* Test du mot de passe avec l'expression régulière et renvoi du résultat */\n    return re.test(password);\n  }\n  passwordInput.on('input', function () {\n    if (validatePassword(passwordInput.val())) {\n      // Si le mot de passe est valide, affichez l'icône de succès\n      passwordValidationIcon.attr('src', '/images/icon_success.png');\n    } else {\n      // Si le mot de passe n'est pas valide, affichez l'icône d'erreur\n      passwordValidationIcon.attr('src', '/images/icon_success.png');\n    }\n  });\n  confirmPasswordInput.on('input', function () {\n    if (passwordInput.val() === confirmPasswordInput.val()) {\n      // Si les mots de passe correspondent, affichez l'icône de succès\n      confirmPasswordValidationIcon.attr('src', '/images/icon_success.png');\n    } else {\n      // Si les mots de passe ne correspondent pas, affichez l'icône d'erreur\n      confirmPasswordValidationIcon.attr('src', '/images/icon_success.png');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbWFpbi5qcy5qcyIsIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsInJlYWR5IiwidG9nZ2xlQ2hlY2tib3giLCJib2R5IiwiZm9ybUNvbnRhaW5lciIsImZvcm0iLCJwYXNzd29yZElucHV0IiwiY29uZmlybVBhc3N3b3JkSW5wdXQiLCJwYXNzd29yZFZhbGlkYXRpb25JY29uIiwiY29uZmlybVBhc3N3b3JkVmFsaWRhdGlvbkljb24iLCJjc3MiLCJpc0RhcmtNb2RlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInByb3AiLCJhcHBseURhcmtNb2RlIiwib24iLCJpc0RhcmsiLCJpcyIsInRvZ2dsZUNsYXNzIiwic2V0SXRlbSIsInNldFRpbWVvdXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJlbWFpbElucHV0IiwiY29uZmlybUVtYWlsSW5wdXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZSIsImFsZXJ0IiwiZW1haWwiLCJ2YWwiLCJwYXNzd29yZCIsInZhbGlkYXRlRW1haWwiLCJjb25maXJtRW1haWwiLCJ2YWxpZGF0ZVBhc3N3b3JkIiwiY29uZmlybVBhc3N3b3JkIiwiZXJyb3IiLCJjb25zb2xlIiwicmUiLCJ0ZXN0IiwiYXR0ciJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL21haW4uanM/ZmRhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAvKiBSw6ljdXDDqXJhdGlvbiBkZXMgw6lsw6ltZW50cyBIVE1MICovXHJcbiAgICB2YXIgdG9nZ2xlQ2hlY2tib3ggPSAkKCcjdG9nZ2xlX2NoZWNrYm94Jyk7XHJcbiAgICB2YXIgYm9keSA9ICQoJ2JvZHknKTtcclxuICAgIHZhciBmb3JtQ29udGFpbmVyID0gJCgnLmZvcm0tY29udGFpbmVyJyk7XHJcbiAgICB2YXIgZm9ybSA9ICQoJ2Zvcm0nKTtcclxuICAgIHZhciBwYXNzd29yZElucHV0ID0gJCgnI3Bhc3N3b3JkJyk7XHJcbiAgICB2YXIgY29uZmlybVBhc3N3b3JkSW5wdXQgPSAkKCcjY29uZmlybS1wYXNzd29yZCcpO1xyXG4gICAgdmFyIHBhc3N3b3JkVmFsaWRhdGlvbkljb24gPSAkKCcjcGFzc3dvcmQtdmFsaWRhdGlvbi1pY29uJyk7XHJcbiAgICB2YXIgY29uZmlybVBhc3N3b3JkVmFsaWRhdGlvbkljb24gPSAkKCcjY29uZmlybS1wYXNzd29yZC12YWxpZGF0aW9uLWljb24nKTtcclxuICAgIHZhciBwYXNzd29yZFZhbGlkYXRpb25JY29uID0gJCgnI3Bhc3N3b3JkLXZhbGlkYXRpb24taWNvbicpO1xyXG4gICAgdmFyIGNvbmZpcm1QYXNzd29yZFZhbGlkYXRpb25JY29uID0gJCgnI2NvbmZpcm0tcGFzc3dvcmQtdmFsaWRhdGlvbi1pY29uJyk7XHJcblxyXG4gICAgLyogRMOpc2FjdGl2YXRpb24gdGVtcG9yYWlyZSBkZXMgdHJhbnNpdGlvbnMgKi9cclxuICAgIGJvZHkuY3NzKCd0cmFuc2l0aW9uJywgJ25vbmUnKTtcclxuICAgIGZvcm0uY3NzKCd0cmFuc2l0aW9uJywgJ25vbmUnKTtcclxuICAgIGZvcm1Db250YWluZXIuY3NzKCd0cmFuc2l0aW9uJywgJ25vbmUnKTtcclxuXHJcbiAgICAvKiBEw6lmaW5pdGlvbiBkZXMgY291bGV1cnMgZCdhcnJpw6hyZS1wbGFuIGV0IGRlIHRleHRlIGluaXRpYWxlcyAqL1xyXG4gICAgYm9keS5jc3MoJ2JhY2tncm91bmRDb2xvcicsICcjZjlmNGUxJyk7XHJcbiAgICBib2R5LmNzcygnY29sb3InLCAnIzAwMCcpO1xyXG4gICAgZm9ybS5jc3MoJ2JhY2tncm91bmRDb2xvcicsICcjZjlmNGUxJyk7XHJcblxyXG4gICAgLyogUsOpY3Vww6lyYXRpb24gZGUgbCfDqXRhdCBkdSBtb2RlIHNvbWJyZSBkZXB1aXMgbGUgbG9jYWxTdG9yYWdlICovXHJcbiAgICB2YXIgaXNEYXJrTW9kZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXJrTW9kZScpID09PSAndHJ1ZSc7XHJcblxyXG4gICAgLyogQXBwbGljYXRpb24gZGUgbCfDqXRhdCBkdSBtb2RlIHNvbWJyZSAqL1xyXG4gICAgdG9nZ2xlQ2hlY2tib3gucHJvcCgnY2hlY2tlZCcsIGlzRGFya01vZGUpO1xyXG4gICAgYXBwbHlEYXJrTW9kZShpc0RhcmtNb2RlKTtcclxuXHJcbiAgICAvKiBHZXN0aW9uIGR1IGNoYW5nZW1lbnQgZCfDqXRhdCBkdSBtb2RlIHNvbWJyZSAqL1xyXG4gICAgdG9nZ2xlQ2hlY2tib3gub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaXNEYXJrID0gdG9nZ2xlQ2hlY2tib3guaXMoJzpjaGVja2VkJyk7XHJcbiAgICAgICAgYm9keS50b2dnbGVDbGFzcygnZGFyay1tb2RlJywgaXNEYXJrKTtcclxuXHJcbiAgICAgICAgLyogTWlzZSDDoCBqb3VyIGRlIGwnw6l0YXQgZHUgbW9kZSBzb21icmUgZGFucyBsZSBsb2NhbFN0b3JhZ2UgKi9cclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZGFya01vZGUnLCBpc0RhcmspO1xyXG5cclxuICAgICAgICAvKiBBcHBsaXF1ZXIgbGVzIGNoYW5nZW1lbnRzIGQnYXJyacOocmUtcGxhbiBldCBkZSBjb3VsZXVyIGVuIGZvbmN0aW9uIGRlIGwnw6l0YXQgZHUgbW9kZSBzb21icmUgKi9cclxuICAgICAgICBhcHBseURhcmtNb2RlKGlzRGFyayk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiBSw6lhY3RpdmF0aW9uIGRlcyB0cmFuc2l0aW9ucyBhcHLDqHMgdW4gY291cnQgZMOpbGFpICovXHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBib2R5LmNzcygndHJhbnNpdGlvbicsICcnKTtcclxuICAgICAgICBmb3JtLmNzcygndHJhbnNpdGlvbicsICcnKTtcclxuICAgICAgICBmb3JtQ29udGFpbmVyLmNzcygndHJhbnNpdGlvbicsICcnKTtcclxuICAgIH0sIDEwMCk7XHJcblxyXG4gICAgLyogQWpvdXQgZCd1biDDqWNvdXRldXIgZCfDqXbDqW5lbWVudHMgXCJjbGlja1wiIGF1IGJvdXRvbiBkJ2FubnVsYXRpb24gKi9cclxuICAgICQoJyNjYW5jZWwnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2RldndlYic7IC8vIFJlbXBsYWNleiBcIi9kZXZ3ZWJcIiBwYXIgdm90cmUgVVJMXHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiBBcHBsaWNhdGlvbiBkdSBtb2RlIHNvbWJyZSAqL1xyXG4gICAgZnVuY3Rpb24gYXBwbHlEYXJrTW9kZShpc0RhcmspIHtcclxuICAgICAgICBpZiAoaXNEYXJrKSB7XHJcbiAgICAgICAgICAgIC8qIFBhc3NhZ2UgZW4gbW9kZSBzb21icmUgKi9cclxuICAgICAgICAgICAgYm9keS5jc3MoJ2JhY2tncm91bmRDb2xvcicsICcjMzMzJyk7XHJcbiAgICAgICAgICAgIGJvZHkuY3NzKCdjb2xvcicsICcjZjlmNGUxJyk7XHJcbiAgICAgICAgICAgIGZvcm0uY3NzKCdiYWNrZ3JvdW5kQ29sb3InLCAnIzMzMycpO1xyXG4gICAgICAgICAgICBmb3JtQ29udGFpbmVyLmNzcygnYmFja2dyb3VuZEltYWdlJywgXCJ1cmwoJy9pbWFnZXMvYmFja2dyb3VuZF9kYXJrLnBuZycpXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8qIFBhc3NhZ2UgZW4gbW9kZSBjbGFpciAqL1xyXG4gICAgICAgICAgICBib2R5LmNzcygnYmFja2dyb3VuZENvbG9yJywgJyNmOWY0ZTEnKTtcclxuICAgICAgICAgICAgYm9keS5jc3MoJ2NvbG9yJywgJyMwMDAnKTtcclxuICAgICAgICAgICAgZm9ybS5jc3MoJ2JhY2tncm91bmRDb2xvcicsICcjZjlmNGUxJyk7XHJcbiAgICAgICAgICAgIGZvcm1Db250YWluZXIuY3NzKCdiYWNrZ3JvdW5kSW1hZ2UnLCBcInVybCgnL2ltYWdlcy9iYWNrZ3JvdW5kLnBuZycpXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiBSw6ljdXDDqXJhdGlvbiBkZXMgw6lsw6ltZW50cyBlLW1haWwgZXQgZGUgY29uZmlybWF0aW9uIGQnZS1tYWlsICovXHJcbiAgICB2YXIgZW1haWxJbnB1dCA9ICQoJyNlbWFpbCcpO1xyXG4gICAgdmFyIGNvbmZpcm1FbWFpbElucHV0ID0gJCgnI2NvbmZpcm0tZW1haWwnKTtcclxuXHJcbiAgICAvKiBJbnRlcmRpY3Rpb24gZHUgY29waWVyL2NvbGxlciBkYW5zIGxlIGNoYW1wIGRlIGNvbmZpcm1hdGlvbiBkJ2UtbWFpbCAqL1xyXG4gICAgY29uZmlybUVtYWlsSW5wdXQub24oJ3Bhc3RlJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qIEVtcMOqY2hlciBsZSBjb3BpZXIvY29sbGVyIGRhbnMgbGUgY2hhbXAgZGUgY29uZmlybWF0aW9uIGR1IG1vdCBkZSBwYXNzZSAqL1xyXG4gICAgY29uZmlybVBhc3N3b3JkSW5wdXQub24oJ3Bhc3RlJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgYWxlcnQoXCJJbCBuJ2VzdCBwYXMgcG9zc2libGUgZGUgY29sbGVyIGRhbnMgY2UgY2hhbXAuXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogQWpvdXQgZCd1biDDqWNvdXRldXIgZCfDqXbDqW5lbWVudHMgXCJzdWJtaXRcIiBhdSBmb3JtdWxhaXJlICovXHJcbiAgICAkKCcjbG9naW4tZm9ybScpLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvKiBSw6ljdXDDqXJhdGlvbiBkZSBsJ2UtbWFpbCBldCBkdSBtb3QgZGUgcGFzc2UgZGVzIGNoYW1wcyBkZSBzYWlzaWUgKi9cclxuICAgICAgICAgICAgdmFyIGVtYWlsID0gZW1haWxJbnB1dC52YWwoKTtcclxuICAgICAgICAgICAgdmFyIHBhc3N3b3JkID0gcGFzc3dvcmRJbnB1dC52YWwoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qIFNpIGwnZS1tYWlsIG4nZXN0IHBhcyB2YWxpZGUsIHNpIGxlcyBlLW1haWxzIG5lIGNvcnJlc3BvbmRlbnQgcGFzIG91IHNpIGxlIG1vdCBkZSBwYXNzZSBuJ2VzdCBwYXMgdmFsaWRlLCBibG9jYWdlIGRlIGxhIHNvdW1pc3Npb24gZHUgZm9ybXVsYWlyZSAqL1xyXG4gICAgICAgICAgICBpZiAoIXZhbGlkYXRlRW1haWwoZW1haWwpKSB7XHJcbiAgICAgICAgICAgICAgICBhbGVydCgnVmV1aWxsZXogZW50cmVyIHVuZSBhZHJlc3NlIGUtbWFpbCB2YWxpZGUuJyk7XHJcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVtYWlsICE9PSBjb25maXJtRW1haWwpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCdMZXMgYWRyZXNzZXMgZS1tYWlsIG5lIGNvcnJlc3BvbmRlbnQgcGFzLicpO1xyXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICghdmFsaWRhdGVQYXNzd29yZChwYXNzd29yZCkpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCdMZSBtb3QgZGUgcGFzc2UgZG9pdCBjb250ZW5pciBhdSBtb2lucyB1bmUgbGV0dHJlIG1pbnVzY3VsZSwgdW5lIGxldHRyZSBtYWp1c2N1bGUsIHVuIGNoaWZmcmUsIHVuIGNhcmFjdMOocmUgc3DDqWNpYWwgZXQgYXZvaXIgdW5lIGxvbmd1ZXVyIG1pbmltYWxlIGRlIDggY2FyYWN0w6hyZXMuJyk7XHJcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBhc3N3b3JkICE9PSBjb25maXJtUGFzc3dvcmQpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCdMZXMgbW90cyBkZSBwYXNzZSBuZSBjb3JyZXNwb25kZW50IHBhcy4nKTtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAvKiBTaSB1bmUgZXJyZXVyIHNlIHByb2R1aXQsIGNhcHR1cmUgZXQgYWZmaWNoYWdlIGRlIGNlbGxlLWNpICovXHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmUgZXJyZXVyIHMnZXN0IHByb2R1aXRlIGxvcnMgZGUgbGEgdmFsaWRhdGlvbiBkdSBmb3JtdWxhaXJlIDpcIiwgZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8qIEZvbmN0aW9uIHBvdXIgdmFsaWRlciB1bmUgYWRyZXNzZSBlLW1haWwgKi9cclxuICAgIGZ1bmN0aW9uIHZhbGlkYXRlRW1haWwoZW1haWwpIHtcclxuICAgICAgICAvKiBDcsOpYXRpb24gZCd1bmUgZXhwcmVzc2lvbiByw6lndWxpw6hyZSBwb3VyIHRlc3RlciBsZSBmb3JtYXQgZGUgbCdlLW1haWwgKi9cclxuICAgICAgICB2YXIgcmUgPSAvXlthLXpBLVowLTkuISMkJSbigJkqKy89P15fYHt8fX4tXStAW2EtekEtWjAtOS1dKyg/OlxcLlthLXpBLVowLTktXSspKiQvO1xyXG4gICAgICAgIC8qIFRlc3QgZGUgbCdlLW1haWwgYXZlYyBsJ2V4cHJlc3Npb24gcsOpZ3VsacOocmUgZXQgcmVudm9pIGR1IHLDqXN1bHRhdCAqL1xyXG4gICAgICAgIHJldHVybiByZS50ZXN0KGVtYWlsKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiBGb25jdGlvbiBwb3VyIHZhbGlkZXIgdW4gbW90IGRlIHBhc3NlICovXHJcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkKSB7XHJcbiAgICAgICAgLyogQ3LDqWF0aW9uIGQndW5lIGV4cHJlc3Npb24gcsOpZ3VsacOocmUgcG91ciB0ZXN0ZXIgbGUgZm9ybWF0IGR1IG1vdCBkZSBwYXNzZSAqL1xyXG4gICAgICAgIHZhciByZSA9IC9eKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qXFxkKSg/PS4qW0AkISUqPyZdKVtBLVphLXpcXGRAJCElKj8mXXs4LH0kLztcclxuICAgICAgICAvKiBUZXN0IGR1IG1vdCBkZSBwYXNzZSBhdmVjIGwnZXhwcmVzc2lvbiByw6lndWxpw6hyZSBldCByZW52b2kgZHUgcsOpc3VsdGF0ICovXHJcbiAgICAgICAgcmV0dXJuIHJlLnRlc3QocGFzc3dvcmQpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhc3N3b3JkSW5wdXQub24oJ2lucHV0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkSW5wdXQudmFsKCkpKSB7XHJcbiAgICAgICAgICAgIC8vIFNpIGxlIG1vdCBkZSBwYXNzZSBlc3QgdmFsaWRlLCBhZmZpY2hleiBsJ2ljw7RuZSBkZSBzdWNjw6hzXHJcbiAgICAgICAgICAgIHBhc3N3b3JkVmFsaWRhdGlvbkljb24uYXR0cignc3JjJywgJy9pbWFnZXMvaWNvbl9zdWNjZXNzLnBuZycpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIFNpIGxlIG1vdCBkZSBwYXNzZSBuJ2VzdCBwYXMgdmFsaWRlLCBhZmZpY2hleiBsJ2ljw7RuZSBkJ2VycmV1clxyXG4gICAgICAgICAgICBwYXNzd29yZFZhbGlkYXRpb25JY29uLmF0dHIoJ3NyYycsICcvaW1hZ2VzL2ljb25fc3VjY2Vzcy5wbmcnKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25maXJtUGFzc3dvcmRJbnB1dC5vbignaW5wdXQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHBhc3N3b3JkSW5wdXQudmFsKCkgPT09IGNvbmZpcm1QYXNzd29yZElucHV0LnZhbCgpKSB7XHJcbiAgICAgICAgICAgIC8vIFNpIGxlcyBtb3RzIGRlIHBhc3NlIGNvcnJlc3BvbmRlbnQsIGFmZmljaGV6IGwnaWPDtG5lIGRlIHN1Y2PDqHNcclxuICAgICAgICAgICAgY29uZmlybVBhc3N3b3JkVmFsaWRhdGlvbkljb24uYXR0cignc3JjJywgJy9pbWFnZXMvaWNvbl9zdWNjZXNzLnBuZycpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIFNpIGxlcyBtb3RzIGRlIHBhc3NlIG5lIGNvcnJlc3BvbmRlbnQgcGFzLCBhZmZpY2hleiBsJ2ljw7RuZSBkJ2VycmV1clxyXG4gICAgICAgICAgICBjb25maXJtUGFzc3dvcmRWYWxpZGF0aW9uSWNvbi5hdHRyKCdzcmMnLCAnL2ltYWdlcy9pY29uX3N1Y2Nlc3MucG5nJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG59KTsiXSwibWFwcGluZ3MiOiJBQUFBQSxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxLQUFLLENBQUMsWUFBWTtFQUMxQjtFQUNBLElBQUlDLGNBQWMsR0FBR0gsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO0VBQzFDLElBQUlJLElBQUksR0FBR0osQ0FBQyxDQUFDLE1BQU0sQ0FBQztFQUNwQixJQUFJSyxhQUFhLEdBQUdMLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztFQUN4QyxJQUFJTSxJQUFJLEdBQUdOLENBQUMsQ0FBQyxNQUFNLENBQUM7RUFDcEIsSUFBSU8sYUFBYSxHQUFHUCxDQUFDLENBQUMsV0FBVyxDQUFDO0VBQ2xDLElBQUlRLG9CQUFvQixHQUFHUixDQUFDLENBQUMsbUJBQW1CLENBQUM7RUFDakQsSUFBSVMsc0JBQXNCLEdBQUdULENBQUMsQ0FBQywyQkFBMkIsQ0FBQztFQUMzRCxJQUFJVSw2QkFBNkIsR0FB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\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/main.js"]();
/******/ 	
/******/ })()
;