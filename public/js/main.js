/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/main.js":
/*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
/***/ (() => {

eval("$(document).ready(function () {\n  /* Récupération des éléments HTML */\n  var toggleCheckbox = $('#toggle_checkbox');\n  var body = $('body');\n  var formContainer = $('.form-container');\n  var form = $('form');\n  var passwordInput = $('#password');\n  var confirmPasswordInput = $('#confirm-password');\n  var passwordValidationIcon = $('#password-validation-icon');\n  var confirmPasswordValidationIcon = $('#confirm-password-validation-icon');\n\n  /* Récupération des éléments e-mail et de confirmation d'e-mail */\n  var emailInput = $('#email');\n  var confirmEmailInput = $('#confirm-email');\n  var emailValidationIcon = $('#email-validation-icon');\n  var confirmEmailValidationIcon = $('#confirm-email-validation-icon');\n\n  /* Désactivation temporaire des transitions */\n  body.css('transition', 'none');\n  form.css('transition', 'none');\n  formContainer.css('transition', 'none');\n\n  /* Définition des couleurs d'arrière-plan et de texte initiales */\n  body.css('backgroundColor', '#f9f4e1');\n  body.css('color', '#000');\n  form.css('backgroundColor', '#f9f4e1');\n\n  /* Récupération de l'état du mode sombre depuis le localStorage */\n  var isDarkMode = localStorage.getItem('darkMode') === 'true';\n\n  /* Application de l'état du mode sombre */\n  toggleCheckbox.prop('checked', isDarkMode);\n  applyDarkMode(isDarkMode);\n\n  /* Gestion du changement d'état du mode sombre */\n  toggleCheckbox.on('change', function () {\n    var isDark = toggleCheckbox.is(':checked');\n    body.toggleClass('dark-mode', isDark);\n\n    /* Mise à jour de l'état du mode sombre dans le localStorage */\n    localStorage.setItem('darkMode', isDark);\n\n    /* Appliquer les changements d'arrière-plan et de couleur en fonction de l'état du mode sombre */\n    applyDarkMode(isDark);\n  });\n\n  /* Réactivation des transitions après un court délai */\n  setTimeout(function () {\n    body.css('transition', '');\n    form.css('transition', '');\n    formContainer.css('transition', '');\n  }, 100);\n\n  /* Ajout d'un écouteur d'événements \"click\" au bouton d'annulation */\n  $('#cancel').on('click', function () {\n    window.location.href = '/devweb'; // Remplacez \"/devweb\" par votre URL\n  });\n\n  /* Application du mode sombre */\n  function applyDarkMode(isDark) {\n    if (isDark) {\n      /* Passage en mode sombre */\n      body.css('backgroundColor', '#333');\n      body.css('color', '#f9f4e1');\n      form.css('backgroundColor', '#333');\n      formContainer.css('backgroundImage', \"url('/images/background_dark.png')\");\n    } else {\n      /* Passage en mode clair */\n      body.css('backgroundColor', '#f9f4e1');\n      body.css('color', '#000');\n      form.css('backgroundColor', '#f9f4e1');\n      formContainer.css('backgroundImage', \"url('/images/background.png')\");\n    }\n  }\n\n  /* Interdiction du copier/coller dans le champ de confirmation d'e-mail */\n  confirmEmailInput.on('paste', function (event) {\n    event.preventDefault();\n    alert(\"Il n'est pas possible de coller dans ce champ.\");\n  });\n\n  /* Empêcher le copier/coller dans le champ de confirmation du mot de passe */\n  confirmPasswordInput.on('paste', function (e) {\n    e.preventDefault();\n    alert(\"Il n'est pas possible de coller dans ce champ.\");\n  });\n\n  /* Ajout d'un écouteur d'événements \"submit\" au formulaire */\n  $('#login-form').on('submit', function (event) {\n    try {\n      /* Récupération de l'e-mail et du mot de passe des champs de saisie */\n      var email = emailInput.val();\n      var password = passwordInput.val();\n\n      /* Si l'e-mail n'est pas valide, si les e-mails ne correspondent pas ou si le mot de passe n'est pas valide, blocage de la soumission du formulaire */\n      if (!validateEmail(email)) {\n        alert('Veuillez entrer une adresse e-mail valide.');\n        event.preventDefault();\n      } else if (email !== confirmEmailInput.val()) {\n        alert('Les adresses e-mail ne correspondent pas.');\n        event.preventDefault();\n      } else if (!validatePassword(password)) {\n        alert('Le mot de passe doit contenir au moins une lettre minuscule, une lettre majuscule, un chiffre, un caractère spécial et avoir une longueur minimale de 8 caractères.');\n        event.preventDefault();\n      } else if (password !== confirmPasswordInput.val()) {\n        alert('Les mots de passe ne correspondent pas.');\n        event.preventDefault();\n      }\n    } catch (error) {\n      /* Si une erreur se produit, capture et affichage de celle-ci */\n      console.error(\"Une erreur s'est produite lors de la validation du formulaire :\", error);\n    }\n  });\n\n  /* Fonction pour valider une adresse e-mail */\n  function validateEmail(email) {\n    /* Création d'une expression régulière pour tester le format de l'e-mail */\n    var re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    /* Test de l'e-mail avec l'expression régulière et renvoi du résultat */\n    return re.test(email);\n  }\n\n  /* Fonction pour valider un mot de passe */\n  function validatePassword(password) {\n    /* Création d'une expression régulière pour tester le format du mot de passe */\n    var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    /* Test du mot de passe avec l'expression régulière et renvoi du résultat */\n    return re.test(password);\n  }\n  confirmEmailInput.on('input', function () {\n    if (emailInput.val() === confirmEmailInput.val()) {\n      // Si les emails correspondent, afficher l'icône de succès\n      confirmEmailValidationIcon.attr('src', '/images/icon_success.png');\n    } else {\n      // Si les emails ne correspondent pas, afficher l'icône d'erreur\n      confirmEmailValidationIcon.attr('src', '/images/icon_error.png');\n    }\n  });\n  passwordInput.on('input', function () {\n    if (validatePassword(passwordInput.val())) {\n      // Si le mot de passe est valide, affichez l'icône de succès\n      passwordValidationIcon.attr('src', '/images/icon_success.png');\n    } else {\n      // Si le mot de passe n'est pas valide, affichez l'icône d'erreur\n      passwordValidationIcon.attr('src', '/images/icon_error.png');\n    }\n  });\n  confirmPasswordInput.on('input', function () {\n    if (passwordInput.val() === confirmPasswordInput.val()) {\n      // Si les mots de passe correspondent, affichez l'icône de succès\n      confirmPasswordValidationIcon.attr('src', '/images/icon_success.png');\n    } else {\n      // Si les mots de passe ne correspondent pas, affichez l'icône d'erreur\n      confirmPasswordValidationIcon.attr('src', '/images/icon_error.png');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/main.js"]();
/******/ 	
/******/ })()
;